// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.15.0
// source: game_session.sql

package sqlc_generated

import (
	"context"
	"database/sql"
	"time"
)

const createGameSession = `-- name: CreateGameSession :one
INSERT INTO game_session (player_id, map_configuration_id, start_datetime, end_datetime)
VALUES ($1, $2, $3, $4)
RETURNING id, player_id, map_configuration_id, start_datetime, end_datetime
`

type CreateGameSessionParams struct {
	PlayerID           string       `json:"player_id"`
	MapConfigurationID int64        `json:"map_configuration_id"`
	StartDatetime      time.Time    `json:"start_datetime"`
	EndDatetime        sql.NullTime `json:"end_datetime"`
}

func (q *Queries) CreateGameSession(ctx context.Context, arg CreateGameSessionParams) (*GameSession, error) {
	row := q.db.QueryRowContext(ctx, createGameSession,
		arg.PlayerID,
		arg.MapConfigurationID,
		arg.StartDatetime,
		arg.EndDatetime,
	)
	var i GameSession
	err := row.Scan(
		&i.ID,
		&i.PlayerID,
		&i.MapConfigurationID,
		&i.StartDatetime,
		&i.EndDatetime,
	)
	return &i, err
}
